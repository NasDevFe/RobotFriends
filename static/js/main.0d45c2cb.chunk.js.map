{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","src","alt","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","filteredRobots","this","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAkBeA,EAhBF,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,KAAOC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAE5B,OAEE,sBAAKC,UAAY,sDAAjB,UACA,qBAAKC,IAAG,+BAA0BF,EAA1B,YAAwCG,IAAI,kBACpD,gCACA,mCAAML,EAAN,OACA,mCAAMC,EAAN,cCmBYK,EA1BG,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnB,OAEA,8BAGEA,EAAOC,KAAI,SAACC,EAAKC,GAEhB,OACC,cAAC,EAAD,CAEAR,GAAIK,EAAQG,GAAGR,GACfF,KAAMO,EAAQG,GAAGV,KACjBC,MAAOM,EAAQG,GAAGT,OAHbS,SCUIC,EArBG,SAAC,GAAiC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAChC,OAEC,qBAAKV,UAAW,MAAhB,SAEA,uBACMA,UAAU,mCAChBW,KAAM,SACNC,YAAY,gBACZC,SAAYH,OCICI,EAbA,SAACC,GACd,OACC,qBAAKC,MAAO,CAACC,UAAW,SAAWC,OAAQ,2BAA6BC,OAAS,SAAjF,SACCJ,EAAMK,YCgDKC,E,kDA5Cd,aAAgB,IAAD,8BACb,gBAYAC,eAAiB,SAACC,GAClB,EAAKC,SAAS,CAACf,YAAcc,EAAME,OAAOC,SAZ1C,EAAKC,MAAQ,CACZvB,OAAS,GACTK,YAAc,IAJF,E,qDAQb,WAAqB,IAAD,OACpBmB,MAAM,8CAA8CC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC7EF,MAAK,SAAAG,GAAK,OAAI,EAAKR,SAAS,CAAEpB,OAAS4B,S,oBAO1C,WAAU,IAAD,OACFC,EAAiBC,KAAKP,MAAMvB,OAAO+B,QAAO,SAAAC,GAChD,OAAOA,EAAMvC,KAAKwC,cAAcC,SAAS,EAAKX,MAAMlB,YAAY4B,kBAIhE,OAAKH,KAAKP,MAAMvB,OAAOmC,OAItB,sBAAKvC,UAAU,KAAf,UACA,oBAAIA,UAAU,KAAd,6BACA,cAAC,EAAD,CAAWU,aAAgBwB,KAAKZ,iBAC/B,cAAC,EAAD,UACD,cAAC,EAAD,CAAUlB,OAAQ6B,SAPV,oBAAIjC,UAAU,QAAd,6D,GA1BOwC,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,YCGdO,IAASC,OACP,cAAC,IAAMC,WAAP,UAEC,cAAC,EAAD,MAKDC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0d45c2cb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name , email, id}) => {\r\n\r\n\treturn (\r\n\r\n\t\t\t<div className = \"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n\t\t\t<img src={`https://robohash.org/${id}?200*200`} alt=\"robots photos\" />\r\n\t\t\t<div>\r\n\t\t\t<h2> {name} </h2>\r\n\t\t\t<p>  {email} </p>\r\n\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t\t)\r\n}\r\n\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card'\r\n\r\n const CardList = ({ robots }) => {\r\n\t\treturn (\r\n\t\r\n\t\t<div>\r\n\r\n\t\t\t\t{\r\n\t\t\t\trobots.map((user,i) => {\r\n\r\n\t\t \t\treturn\t(\r\n\t\t\t \t\t<Card \r\n\t\t\t \t\tkey={i} \r\n\t\t\t \t\tid={robots.[i].id} \r\n\t\t\t \t\tname={robots.[i].name} \r\n\t\t\t \t\temail={robots.[i].email}\r\n\t\t\t \t\t/>\r\n\t\t\t \t\t)\r\n\t \t\t\t\t})\r\n\r\n\r\n\t\t\t\t}\r\n\t\t\r\n\t\t   \r\n\t   \t</div>\r\n\t   \t)\r\n\t}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange }) => {\r\n\treturn (\r\n\r\n\t\t<div className= \"pa2\">\r\n\r\n\t\t<\r\n\t\tinput className=\"pa3 ba b--green bg-lightest-blue\"\r\n\t\ttype =\"search\" \r\n\t\tplaceholder=\"Search Robots\"\r\n\t\tonChange = {searchChange}\r\n\t\t/>\r\n\r\n\r\n\r\n\t\t</div>\r\n\r\n\r\n\t\t);\r\n}\r\n\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\t\r\n\t\treturn (\t\r\n\t\t\t<div style={{overflowY: \"scroll\" , border: \"1px solid rgb(63,94,251)\" , height : \"800px\" }}>\r\n\t\t\t{props.children}\r\n\t\t\t</div>\r\n\t\t\t)\r\n\t\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport default Scroll;","import React , {Component} from 'react';\r\nimport CardList from '../components/CardList.js';\r\nimport {robots} from '../robots.js'\r\nimport SearchBox from '../components/SearchBox.js';\r\nimport Scroll from '../components/scroll.js'\r\n\r\n\r\nclass App extends Component{\r\n\r\n\tconstructor () {\t\r\n\t\t\tsuper()\r\n\t\t\tthis.state = {\t\r\n\t\t\t\trobots : [],\r\n\t\t\t\tsearchfield : ''\r\n\t\t\t\t}\r\n\t\t}\r\n\r\n\t\t\tcomponentDidMount() {\t\r\n\t\t\tfetch('https://jsonplaceholder.typicode.com/users').then(response => response.json())\r\n\t\t\t.then(users => this.setState({ robots : users}));\r\n\t\t\t}\r\n\r\n\t\t\tonSearchChange = (event) => {\t\r\n\t\t\tthis.setState({searchfield : event.target.value})\t\r\n\t\t\t}\r\n\r\n\trender() {\r\n\t\tconst filteredRobots = this.state.robots.filter(robot => {\t\r\n\t\treturn robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n\t\t\t\t})\r\n\r\n\r\n\t\tif (!this.state.robots.length) {\t\r\n\t\t\t\treturn <h1 className='f2 tc'> Please Wait for a While Page is Loading...</h1>\r\n\t\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t<div className=\"tc\">\r\n\t\t\t<h1 className=\"f1\"> Robot Friends </h1>\r\n\t\t\t<SearchBox searchChange = {this.onSearchChange} />\r\n\t\t\t\t<Scroll>\r\n\t\t\t<CardList robots={filteredRobots }/>\r\n\t\t\t\t</Scroll>\r\n\t\t\t</div>\r\n\t\t\t);\r\n\t\t }\r\n\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import  Card from './Card.js';\nimport App from './containers/App.js';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport './containers/App.css';\n// import { robots } from './robots.js'\n\nReactDOM.render(\n  <React.StrictMode>\n  \n   <App/>\n   \n  \n  </React.StrictMode>,\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}